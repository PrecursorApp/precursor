.canvas {
  flex: 1;
  position: relative;
  outline: none;
  will-change: transform;
  user-select: none;
  &:not(:hover) {
    &:not(:active) {
      .hint {
        display: none;
      }
    }
  }
  &:active {
    + .chat {
      .chat-window {
        user-select: none;
        pointer-events: none;
      }
    }
  }
}
.canvas-frame {
  position: relative;
  width: 100%;
  height: 100%;
  user-select: none;
  cursor: crosshair;
  transform-origin: 0 0;
  transition+: all @run_slow @now @bezier_deform;
  transition+: width @now @run_slower @bezier_deform;
  transition+: height @now @run_slower @bezier_deform;
  will-change: transform;
  &:not(:hover) {
    &:not(:active) {
      user-select: none;
      ~ .mouse {
        .mouse-cursor {
          display: none;
        }
      }
    }
  }
  &.tool-text {
    cursor: text;
  }
  &.tool-select {
    cursor: default;
  }
  &.tool-text-move {
    cursor: move;
    .text-layer-input {
      cursor: move;
    }
  }
  &.relation-in-progress {
    cursor: none;
    .arrow-hint {
      display: none;
    }
  }
  &.radial-not-learned {
    cursor: context-menu;
  }
  &.arrow-tool {
    cursor: none;
  }
  &.pan-tool {
    cursor: none;
  }
  .arrow-handle-group {
    transition: @run @bezier_deform;
    .arrow-hint {
      opacity: 0;
    }
    &:hover {
      .arrow-hint {
        opacity: 1;
      }
    }
    &:active {
      .arrow-hint {
        opacity: 0.5;
      }
    }
  }
}
.arrow-hint {
  stroke-dasharray: 2, 2;
}
.grid-lines-large {
  fill: none;
  stroke: @white;
  stroke-width: 1;
  opacity: @opacity_darker_dark * .75;
}
.grid-lines-small {
  fill: none;
  stroke: @white;
  stroke-width: .5;
  opacity: @opacity_darker_dark;
}
.layers {
  &.live {
    &.layer-handle {
      ~ .layer-outline {
        transition-delay: @run_fast;
      }
    }
  }
  .layer-deleted {
    &.layer-outline {
      animation: layer-deleted (2 * @run_slower) @run_slower @bezier_deform;
      pointer-events: none;
    }
    &.text-layer {
      animation: text-deleted (2 * @run_slower) @run_slower @bezier_deform;
      pointer-events: none;
    }
  }
}
.tool-select {
  .layer-handle {
    stroke: transparent;
    stroke-width: 20;
    &:hover {
      ~ .layer-outline {
        stroke: @white;
        stroke-width: 4;
        transition-duration: @run_fast;
        &.selected {
          stroke: @color_select_hover;
        }
      }
    }
  }
}
.arrow-tool {
  .arrow-handle {
    stroke: transparent;
    stroke-width: 20;
    &:hover, &.hovered {
      ~ .arrow-outline {
        stroke: @white;
        stroke-width: 4;
        transition-duration: @run_fast;
        &.selected {
          stroke: @color_select_hover;
        }
      }
    }
  }
}
.shape-layer {
  stroke: none;
  fill: none;
  &.layer-in-progress {
    stroke: @color_select;
    stroke-width: 2;
    &.selection {
      stroke: @gray_lighter;
      stroke-width: 1;
    }
  }
  &.interactive-fill {
    &:not(.invalid) {
      fill: transparent;
      cursor: pointer;
    }
    &.selected {
      cursor: move;
    }
  }
  &.layer-outline,
  &.arrow-outline {
    stroke: @gray_light;
    stroke-width: 2;
    pointer-events: none;
    transition+: stroke @run @bezier_deform;
    transition+: stroke-width @run @bezier_deform;
    &.selected {
      stroke-width: 2;
      stroke: @color_select;
    }
    &.unsaved {
      stroke-dasharray: 5,5;
      &.selected {
        opacity: .5;
      }
      &:not(.selected) {
        stroke: @gray_dark;
      }
    }
  }
}
.text-layer {
  user-select: none;
  fill: @gray_light;
  transition+: fill @run @bezier_deform;
  transition+: font-size @run_fast @bezier_deform;
  &.editable {
    &:hover {
      fill: @color_select_hover;
    }
  }
  &.selected {
    fill: @color_select;
  }
  &.layer-in-progress {
    fill: @color_select;
    stroke-opacity: 1;
  }
  &.interactive-fill {
    &:not(.invalid) {
      cursor: pointer;
    }
    &.selected {
      cursor: move;
    }
  }
  &.arrow-handle {
    &:hover, &.hovered {
      fill: @color_select_hover;
      transition-duration: @run_fast;
    }
  }
  &.unsaved {
    &.selected {
      opacity: .5;
    }
    &:not(.selected) {
      fill: @gray_dark;
    }
  }
}
.static {
  .interactive-fill {
    &:not(.signup-layer) {
      display: none;
    }
  }
}
.tool-select {
  .layer:hover {
    .text-layer {
      fill: @color_select_hover;
      &.selected {
        fill: @color_select;
      }
    }
  }
}
.issue-layer {
  cursor: pointer;
}
.mouse-tool {
  fill: none;
  stroke-width: 8;
}
.action-info {
  margin-top: auto;
}
.svg-text-form {
  input[type="text"] {
    .placeholder_style(color; @gray);
    color: @color_select_hover;
    background: none;
    border: none;
    outline: none;
  }
}
.text-size-helper {
  fill: transparent;
}
.layer-ids-targets {
  overflow: visible;
}
.layer-properties-container {
  position: absolute;
  top: 0;
  left: 0;
}
.layer-properties {
  .flexy(column);
  box-shadow+:  1px  0   @gray_dark inset;
  box-shadow+: -1px  0   @gray_dark inset;
  position: fixed;
  top: 0;
  left: 0;
  width: @tile_properties;
  background: @dye_inner;
  .adaptive {
    margin: 0;
    &:nth-of-type(2) {
      margin-top: -1px;
    }
  }
  textarea,
  input[type="text"] {
    background: @dye_inner;
    &:not(:focus) {
      .inline(@gray_dark);
    }
  }
  label {
    &:before {
      color: @gray_dark;
      background-image: linear-gradient(to bottom, @dye_inner, @dye_inner);
    }
  }
}
.layer-property-id {
  // TODO clean up this specificity hack
  &&& {
    &:focus {
      .inline(@color_select);
      box-shadow+: 0 -2px @color_select inset;
    }
  }
}
.layer-property-target {
  // TODO clean up this specificity hack
  &&& {
    padding-right: @tile;
    &.expanded {
      &:not(:focus) {
        box-shadow+: 0 -1px @dye_inner inset;
        .inline(@gray_dark);
      }
    }
  }
}
.layer-property {
  .flexy(column);
}
.layer-property-button {
  .icon(fill; @white);
  position: relative;
  top: 0;
  right: 0;
  width: @tile;
  height: @tile;
  margin: -@tile 0 0 auto;
  &:hover {
    .icon(fill; @color_select);
  }
}
.property-dropdown-targets {
  .flexy(column);
  .scrollbar_inner();
  max-height: ~"calc(" (@tile * 4) ~"+ 1px)";
  background: @gray_darker;
  border: 1px solid @gray_dark;
  border-top: none;
  overflow-y: auto;
  animation: in-fade-bottom-soft @run ease-out;
  &:not(.expanded) {
    display: none;
  }
  .property-dropdown-target {
    color: @gray_light;
    line-height: 1;
    height: @tile;
    min-height: @tile;
    padding: @menu_padding;
    border: 1px solid transparent;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    &:hover {
      border-color: @color_select;
    }
  }
}
.edit-handles {
  .edit-handle {
    fill: @color_select;
    transition: @run;
    &.bottom.right {
      cursor: nwse-resize;
    }
    &.top.left {
      cursor: nwse-resize;
    }
    &.bottom.left {
      cursor: nesw-resize;
    }
    &.top.right {
      cursor: nesw-resize;
    }
  }
}
.handle-outline {
  stroke: @color_select;
  stroke-dasharray: 1,1;
}
#arrow-point {
  fill: @gray_light;
}
#selected-arrow-point {
  fill: @color_select;
}
.clips {
  opacity: @opacity_darker_gray;
  .shape-layer {
    stroke: @white;
    stroke-dasharray: 2, 3;
  }
  .text-layer {
    fill: @white;
  }
  .active {
    transition: all 400ms ease-in-out;
    fill: @color_select;
    .shape-layer {
      stroke: @color_select;
    }
    .text-layer {
      fill: @color_select;
    }
  }
  .inactive {
    transition: all 400ms ease-in-out;
  }
}

.clip-in-progress {
  .layer-handle {
    pointer-events: none;
  }
}
